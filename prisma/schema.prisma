// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Company {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String   @unique
  registrationNo String   @unique
  policies       Policy[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
model Insurer {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  registrationId String    @unique  
  phoneNumber    String?             
  address        String?            
  website        String?             
  contactPerson  String?  
   policies       Policy[]           
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Policy {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  company        Company      @relation(fields: [companyId], references: [id])
  companyId      String       @db.ObjectId
  policyName String
  policyNumber   String       @unique
  insurer        Insurer?      @relation(fields: [insurerId], references: [id])
  insurerId      String?       @db.ObjectId 
  status         PolicyStatus
  expirationDate DateTime
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}




enum Role {
  SUPER_ADMIN
  ADMIN
}

model Admin {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  email     String     @unique
  password  String
  name      String
  role      Role       @default(ADMIN) // Default role set to Admin
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  auditLogs AuditLog[]
}

model AuditLog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  admin     Admin?    @relation(fields: [adminId], references: [id])
  adminId   String?   @db.ObjectId
  action    String   // e.g., 'CREATE', 'UPDATE', 'DELETE'
  target    String   // The entity being modified (e.g., Policy ID or Company ID)
  details   String   // Additional details about the action
  timestamp DateTime @default(now())
}

enum PolicyStatus {
  ACTIVE
  INACTIVE
}
